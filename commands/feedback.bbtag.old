{//;load functions}
{inject;{get;_gitcmd.functions}}

{//;function to tell people to use forum channel}
{function;new_help;
{embed;{embedbuild;
title:Feedback Help;
color:{func.dlcolors;yellow};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Please see the <#1273182744893067346> channel to post feedback about Discord Linux.;}}
}

{//;function to output help}
{function;issues_help;
{embed;{embedbuild;
title:Feedback Help;
color:{func.dlcolors;yellow};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:__**Usage**__: `feedback <list|create <body text -t issue title> |close <issue number>|open <issue number>|comment <issue number> <text>>`
List, create, close, or open issues on the [Discord Linux Feedback Repo](https://github.com/discordlinux/feedback)

**Arguments**
{repeat;`;3}
list - List open issues.

create - Create a new issue.
    Ex: 'feedback create description of issue -t title of issue'

close - Close an issue.  Must be sudoer to use.
    Ex: 'feedback close 1'

open - Open an issue.  Must be sudoer to use.
    Ex: 'feedback open 1'

comment- Add a comment to an issue.
    Ex: 'feedback comment 1 some comment'
{repeat;`;3};}}
}

{//;function to list open issues}
{function;issues_list;
{//;get issues from API}
{jset;~head;headers.Authorization;token {get;@gittoken};c}
{jset;~head;headers.accept;application/vnd.github.v3+json;c}
{set;!~issues;{request;https://api.github.com/repos/discordlinux/feedback/issues;{get;~head}}}
{//;output issues in embed}
{embed;{embedbuild;
title:Feedback Open Issues;
url:https://github.com/discordlinux/feedback/issues;
color:{func.dlcolors;blurple};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:{clean;{if;{length;{jget;~issues;body}};==;0;
No open issues.;
{foreach;~issue;{jget;~issues;body};[#{jget;~issue;number} - {jget;~issue;title}]({jget;~issue;html_url}){newline}}}};
}}
}

{//;function to create new issue}
{function;issues_create;
{fallback;}
{//;return if invalid usage}
{if;{logic;||;
{bool;{params;0};==;{null}};
{bool;{params;1};==;{null}}};
{embed;{embedbuild;
title:Feedback Error Creating Issue;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Missing required arguments. Usage: `feedback create <body text> -t <title>`;}}
{return}
}
{fallback}
{jset;~data;body;From {usernick} ({userid}):{newline}{params;0};c}
{jset;~data;title;{params;1};c}
{jset;~head;method;POST;c}
{jset;~head;headers.Authorization;token {get;@gittoken};c}
{jset;~head;headers.accept;application/vnd.github.v3+json;c}
{set;!~response;{request;https://api.github.com/repos/discordlinux/feedback/issues;{get;~head};{get;~data}}}
{if;{jget;~response;status};!=;201;
{embed;{embedbuild;
title:Feedback Error Creating Issue;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Failed to create issue.{newline}{get;~response};}}
{return}
}
{embed;{embedbuild;
title:Feedback Issue Created;
color:{func.dlcolors;green};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Issue created successfully.
[#{jget;~response;body.number} - {jget;~response;body.title}]({jget;~response;body.html_url});}}
}

{//;function to update existing issue}
{function;issues_update;
{//;return if user is not staff}
{if;{userhasrole;457281742844330004;{userid};quiet};!=;true;
{embed;{embedbuild;
title:Feedback Error Updating Issue;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Only sudoers can update issues!;}}
{return}
}
{//;return if invalid usage}
{if;{parseint;{params;1}};==;NaN;
{embed;{embedbuild;
title:Feedback Error Updating Issue;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Missing required arguments. Usage: `feedback {params;0} <issue number>`;}}
{return}
}
{jset;~data;state;{params;0};c}
{jset;~head;method;PATCH;c}
{jset;~head;headers.Authorization;token {get;@gittoken};c}
{jset;~head;headers.accept;application/vnd.github.v3+json;c}
{set;!~response;{request;https://api.github.com/repos/discordlinux/feedback/issues/{params;1};{get;~head};{get;~data}}}
{if;{jget;~response;status};!=;200;
{embed;{embedbuild;
title:Feedback Error Updating Issue;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Failed to update issue.{newline}{get;~response};}}
{return}
}
{embed;{embedbuild;
title:Feedback Issue Updated;
color:{switch;{jget;~response;body.state};["open"];{func.dlcolors;green};{func.dlcolors;brightred}};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Issue updated successfully.
State: {jget;~response;body.state}
[#{jget;~response;body.number} - {jget;~response;body.title}]({jget;~response;body.html_url});}}
}

{//;function to update existing issue}
{function;issues_comment;
{fallback;}
{//;return if invalid usage}
{if;{logic;||;
{bool;{parseint;{params;0}};==;NaN};
{bool;{params;1};==;{null}}};
{embed;{embedbuild;
title:Feedback Error Posting Comment;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Missing required arguments. Usage: `feedback comment <issue number> <text>`;}}
{return}
}
{fallback}
{jset;~data;body;From {usernick} ({userid}):{newline}{params;1;n};c}
{jset;~head;method;POST;c}
{jset;~head;headers.Authorization;token {get;@gittoken};c}
{jset;~head;headers.accept;application/vnd.github.v3+json;c}
{set;!~response;{request;https://api.github.com/repos/discordlinux/feedback/issues/{params;0}/comments;{get;~head};{get;~data}}}
{if;{jget;~response;status};!=;201;
{embed;{embedbuild;
title:Feedback Error Posting Comment;
color:{func.dlcolors;red};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Failed to comment on issue.{newline}{get;~response};}}
{return}
}
{embed;{embedbuild;
title:Feedback Comment Posted;
color:{func.dlcolors;green};
footer.text:{usernick} ({userid});
footer.icon_url:{useravatar};
timestamp:{time};
description:Comment posted successfully.
{jget;~response;body.html_url};}}
}

{//;redirect everything to new_help function}
{func.new_help}
{return}

{//;detect arguments}
{switch;{lower;{args;0}};
["list"];
{func.issues_list};
["create"];
{func.issues_create;{regexreplace;{flag;_};/^create\s/i;};{flag;t}};
["close"];
{func.issues_update;closed;{args;1}};
["open"];
{func.issues_update;open;{args;1}};
["comment"];
{func.issues_comment;{args;1};{args;2;n}};
{func.issues_help}
}